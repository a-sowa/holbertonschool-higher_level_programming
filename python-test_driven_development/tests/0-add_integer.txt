# Test add_integer function

>>> add_integer = __import__('0-add_integer').add_integer

# Test case 1: Testing addition of two integers
>>> add_integer(1, 2)
3

# Test case 2: Testing addition with a negative number
>>> add_integer(100, -2)
98

# Test case 3: Testing addition with one integer and default value of b
>>> add_integer(2)
100

# Test case 4: Testing addition with one float and one integer
>>> add_integer(100.3, -2)
98

# Test case 5: Testing addition of two negative integers
>>> add_integer(-2, -2)
-4

# Test case 6: Testing TypeError for invalid input (b is a string)
>>> try:
...     add_integer(4, "School")
... except Exception as e:
...     print(e)
b must be an integer

# Test case 7: Testing TypeError for invalid input (a is a string)
>>> try:
...     add_integer("School")
... except Exception as e:
...     print(e)
a must be an integer

# Test case 8: Testing TypeError for invalid input (a is None)
>>> try:
...     add_integer(None)
... except Exception as e:
...     print(e)
a must be an integer

# Test case 9: Testing NameError for undefined variable
>>> try:
...     add_integer(random_variable, -2)
... except Exception as e:
...     print(e)
name 'random_variable' is not defined

# Test case 10: Testing OverflowError for float infinity
>>> try:
...     add_integer(float("inf"), 10)
... except Exception as e:
...     print(e)
cannot convert float infinity to integer

# Test case 11: Testing TypeError for invalid input (both arguments are strings)
>>> try:
...     add_integer("5", "10")
... except Exception as e:
...     print(e)
a must be an integer

# Test case 12: Testing TypeError for invalid input (a is a list)
>>> try:
...     add_integer([1, 2, 3], 5)
... except Exception as e:
...     print(e)
a must be an integer

# Test case 13: Testing TypeError for invalid input (both arguments are lists)
>>> try:
...     add_integer([1, 2, 3], [4, 5, 6])
... except Exception as e:
...     print(e)
a must be an integer

# Test case 14: Testing TypeError for invalid input (b is None)
>>> try:
...     add_integer(5, None)
... except Exception as e:
...     print(e)
b must be an integer

# Test case 15: Testing TypeError for invalid input (a is a boolean)
>>> try:
...     add_integer(True, 10)
... except Exception as e:
...     print(e)
11