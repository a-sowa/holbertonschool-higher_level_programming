#!/usr/bin/python3
"""
   This file contains the definition of the Square class,
   which inherits from the Rectangle class
"""

from models.rectangle import Rectangle


class Square(Rectangle):
    """Square class, inheriting from the Rectangle class."""

    def __init__(self, size, x=0, y=0, id=None):
        """
        Constructor for the Square class.

        Parameters:
        - size: Size of the square (both width and height).
        - x: X-coordinate of the square.
        - y: Y-coordinate of the square.
        - id: Optional identifier. If provided, passed to the Rectangle class;
        otherwise, generated by Rectangle.

        Public Attributes:
        - id: Unique identifier for the square.
        - size: Size of the square (both width and height).
        - x: X-coordinate of the square.
        - y: Y-coordinate of the square.
        """

        super().__init__(size, size, x, y, id)

    @property
    def size(self):
        """Getter for the size attribute."""
        return self.width

    @size.setter
    def size(self, value):
        """Setter for the size attribute."""
        self.width = value
        self.height = value

    def __str__(self):
        """
            Override the __str__ method to represent the
            Square instance as a string.
        """
        return f"[Square] ({self.id}) {self.x}/{self.y} - {self.size}"

    def update(self, *args, **kwargs):
        """
            Update the Square attributes using the
            provided arguments or key-worded arguments.
        """
        if len(args) > 0:
            self.id = args[0] if len(args) >= 1 else self.id
            self.size = args[1] if len(args) >= 2 else self.size
            self.x = args[2] if len(args) >= 3 else self.x
            self.y = args[3] if len(args) >= 4 else self.y
        else:
            for key, value in kwargs.items():
                setattr(self, key, value)
